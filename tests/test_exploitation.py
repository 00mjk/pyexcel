import os
import pyexcel


class TestIrregularities:
    def setUp(self):
        self.testfile = "test.xlsm"
        self.content = [
            [1,"","","","", ""],
            [1,2,"","","", ""],
            [1,2,3,"","", ""],
            [1,2,3,4,"", ""],
            [1,2,3,4,5, ""],
            [1,2,3,4,5, 6],
            [1,"","","","", ""],
            [1,2,"","","", ""],
            [1,2,3,"","", ""],
            [1,2,3,4,"", ""],
            [1,2,3,4,5, ""]
        ]
        w = pyexcel.Writer(self.testfile)
        w.write_table(self.content)
        w.close()

    def test_irregular_data_file(self):
        r = pyexcel.Reader(self.testfile)
        result = pyexcel.utils.to_array(r.rows())
        assert result == self.content

    def test_irregular_data_file_flatten_to_dict(self):
        r = pyexcel.Reader(self.testfile)
        result = pyexcel.utils.to_dict(r)
        actual = {
            'Series_65': 5.0,
            'Series_56': 2.0,
            'Series_52': '',
            'Series_48': '',
            'Series_57': 3.0,
            'Series_64': 4.0,
            'Series_50': 2.0,
            'Series_18': '',
            'Series_19': 1.0,
            'Series_51': 3.0,
            'Series_14': 2.0,
            'Series_15': 3.0,
            'Series_16': '',
            'Series_17': '',
            'Series_10': '',
            'Series_11': '',
            'Series_12': '',
            'Series_13': 1.0,
            'Series_36': 6.0,
            'Series_37': 1.0,
            'Series_34': 4.0,
            'Series_35': 5.0,
            'Series_32': 2.0,
            'Series_33': 3.0,
            'Series_30': '',
            'Series_31': 1.0,
            'Series_58': 4.0,
            'Series_54': '',
            'Series_38': '',
            'Series_39': '',
            'Series_60': '',
            'Series_53': '',
            'Series_49': 1.0,
            'Series_8': 2.0,
            'Series_9': '',
            'Series_6': '',
            'Series_7': 1.0,
            'Series_4': '',
            'Series_5': '',
            'Series_2': '',
            'Series_3': '',
            'Series_1': 1.0,
            'Series_61': 1.0,
            'Series_66': '',
            'Series_59': '',
            'Series_63': 3.0,
            'Series_62': 2.0,
            'Series_43': 1.0,
            'Series_55': 1.0,
            'Series_28': 4.0,
            'Series_25': 1.0,
            'Series_24': '',
            'Series_27': 3.0,
            'Series_26': 2.0,
            'Series_21': 3.0,
            'Series_20': 2.0,
            'Series_23': '',
            'Series_22': 4.0,
            'Series_47': '',
            'Series_46': '',
            'Series_45': '',
            'Series_44': 2.0,
            'Series_29': 5.0,
            'Series_42': '',
            'Series_41': '',
            'Series_40': ''}
        assert result == actual
    def test_irregular_data_file_rows_to_dict(self):
        r = pyexcel.Reader(self.testfile)
        result = pyexcel.utils.to_dict(r.rows())
        actual = {
            'Series_11': [1.0, 2.0, 3.0, 4.0, 5.0, ''],
            'Series_8': [1.0, 2.0, '', '', '', ''],
            'Series_9': [1.0, 2.0, 3.0, '', '', ''],
            'Series_6': [1.0, 2.0, 3.0, 4.0, 5.0, 6.0],
            'Series_7': [1.0, '', '', '', '', ''],
            'Series_4': [1.0, 2.0, 3.0, 4.0, '', ''],
            'Series_5': [1.0, 2.0, 3.0, 4.0, 5.0, ''],
            'Series_10': [1.0, 2.0,3.0, 4.0, '', ''],
            'Series_3': [1.0, 2.0, 3.0, '', '', ''],
            'Series_1': [1.0, '', '', '', '', ''],
            'Series_2': [1.0, 2.0, '', '', '', '']
        }
        assert result == actual
        
    def test_irregular_data_file_columns_to_dict(self):
        r = pyexcel.Reader(self.testfile)
        result = pyexcel.utils.to_dict(r.columns())
        actual = {
            'Series_6': ['', '', '', '', '', 6.0, '', '', '', '', ''],
            'Series_4': ['', '', '', 4.0, 4.0, 4.0, '', '', '', 4.0, 4.0],
            'Series_5': ['', '', '', '', 5.0, 5.0, '', '', '', '', 5.0],
            'Series_2': ['', 2.0, 2.0, 2.0, 2.0, 2.0, '', 2.0, 2.0, 2.0, 2.0],
            'Series_3': ['', '', 3.0, 3.0, 3.0, 3.0, '', '', 3.0, 3.0, 3.0],
            'Series_1': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
        print result
        assert result == actual
        
    def tearDown(self):
        if os.path.exists(self.testfile):
            os.unlink(self.testfile)